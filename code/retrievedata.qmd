```{r}
library(httr)
library(jsonlite)
library(dplyr)
```


```{r}
# This is the one that works
api_endpoint <- "https://api.data.gov.sg/v1/environment/psi"
desired_date <- "2020-12-31"

# Construct the API request URL
request_url <- paste(api_endpoint, "?date=", desired_date, sep="")

# Make the GET request
response <- GET(request_url)

# Check if the request was successful
if (status_code(response) == 200) {
    # Parse the JSON response
    response_content <- content(response, "text")
    response_json <- fromJSON(response_content, flatten = TRUE)
  
    # Extract the readings for the desired date
    psi_readings <- response_json$items
    
    # Optionally, convert the readings to a dataframe
    psi_df <- as.data.frame(psi_readings)
    
    # Print out the dataframe
    print(psi_df)
} else {
    print(paste("Request failed with status code", status_code(response)))
}

```
```{r}

api_endpoint <- "https://api.data.gov.sg/v1/environment/psi"
start_date <- as.Date("2020-06-01")
end_date <- as.Date("2020-06-30")

all_readings <- list()

for (date in seq(start_date, end_date, by="day")) {
    request_url <- paste(api_endpoint, "?date=", as.character(date), sep="")
    response <- GET(request_url)
    
    if (status_code(response) == 200) {
        response_content <- content(response, "text")
        response_json <- fromJSON(response_content, flatten = TRUE)
        
        # Extract the readings and add them to the list
        daily_readings <- response_json$items
        all_readings[[as.character(date)]] <- daily_readings
    } else {
        warning("Failed to retrieve data for date: ", as.character(date))
    }
}

# Combine all daily data into one dataframe
all_readings_df <- bind_rows(all_readings, .id = "Date")

# Write to CSV
write.csv(all_readings_df, file = "psi_readings_2020_06.csv", row.names = FALSE)


```

